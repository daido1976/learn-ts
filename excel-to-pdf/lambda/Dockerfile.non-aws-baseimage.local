# Define custom function directory
ARG FUNCTION_DIR="/function"

FROM node:20-buster as build-image

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Install build dependencies
RUN apt-get update && \
  apt-get install -y \
  g++ \
  make \
  cmake \
  unzip \
  libcurl4-openssl-dev

# Copy function code
RUN mkdir -p ${FUNCTION_DIR}
COPY . ${FUNCTION_DIR}

WORKDIR ${FUNCTION_DIR}

# Install Node.js dependencies
RUN npm install

# Install the runtime interface client
RUN npm install aws-lambda-ric

# Grab a fresh slim copy of the image to reduce the final size
FROM node:20-buster-slim

# Required for Node runtimes which use npm@8.6.0+ because
# by default npm writes logs under /home/.npm and Lambda fs is read-only
ENV NPM_CONFIG_CACHE=/tmp/.npm

# Include global arg in this stage of the build
ARG FUNCTION_DIR

# Set working directory to function root directory
WORKDIR ${FUNCTION_DIR}

# Copy in the built dependencies
COPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}

# TODO: gotenberg参考にここでlibreoffice関連をインストールする
# TODO: 多分pythonとか不要なのであとで削る
RUN \
  # Install system dependencies required for the next instructions or debugging.
  # Note: tini is a helper for reaping zombie processes.
  apt-get update -qq &&\
  DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends curl gnupg tini python3 default-jre-headless &&\
  # Cleanup.
  # Note: the Debian image does automatically a clean after each install thanks to a hook.
  # Therefore, there is no need for apt-get clean.
  # See https://stackoverflow.com/a/24417119/3248473.
  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# NOTE: 多分emojiが大事
RUN \
  # Install fonts.
  # Credits:
  # https://github.com/arachnys/athenapdf/blob/master/cli/Dockerfile.
  # https://help.accusoft.com/PrizmDoc/v12.1/HTML/Installing_Asian_Fonts_on_Ubuntu_and_Debian.html.
  curl -o ./ttf-mscorefonts-installer_3.8.1_all.deb http://httpredir.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.8.1_all.deb &&\
  apt-get update -qq &&\
  DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends \
  ./ttf-mscorefonts-installer_3.8.1_all.deb \
  culmus \
  fonts-beng \
  fonts-hosny-amiri \
  fonts-lklug-sinhala \
  fonts-lohit-guru \
  fonts-lohit-knda \
  fonts-samyak-gujr \
  fonts-samyak-mlym \
  fonts-samyak-taml \
  fonts-sarai \
  fonts-sil-abyssinica \
  fonts-sil-padauk \
  fonts-telu \
  fonts-thai-tlwg \
  ttf-wqy-zenhei \
  fonts-arphic-ukai \
  fonts-arphic-uming \
  fonts-ipafont-mincho \
  fonts-ipafont-gothic \
  fonts-unfonts-core \
  # LibreOffice recommends.
  fonts-crosextra-caladea \
  fonts-crosextra-carlito \
  fonts-dejavu \
  fonts-dejavu-extra \
  fonts-liberation \
  fonts-liberation2 \
  fonts-linuxlibertine \
  fonts-noto-cjk \
  fonts-noto-core \
  fonts-noto-mono \
  fonts-noto-ui-core \
  fonts-sil-gentium \
  fonts-sil-gentium-basic &&\
  rm -f ./ttf-mscorefonts-installer_3.8.1_all.deb &&\
  # Add Color and Black-and-White Noto emoji font.
  # Credits:
  # https://github.com/gotenberg/gotenberg/pull/325.
  # https://github.com/googlefonts/noto-emoji.
  curl -Ls "https://github.com/googlefonts/noto-emoji/raw/v2.047/fonts/NotoColorEmoji.ttf" -o /usr/local/share/fonts/NotoColorEmoji.ttf &&\
  # Cleanup.
  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# TODO: libreofficeのインストール（unoconverterは不要）
RUN apt-get install -y libreoffice

# TODO: 以下を参考にコールドスタート対策する
# https://github.com/shelfio/libreoffice-lambda-base-image/blob/d48fdb786a63b152b0e1ad29f9b31b2fd5f1307d/Dockerfile.node20-x86_64#L18

# ここまで

# Set runtime interface client as default command for the container runtime
ENTRYPOINT ["/usr/local/bin/npx", "aws-lambda-ric"]
# Pass the name of the function handler as an argument to the runtime
# NOTE: ここを bin/bash にすると、bash でコンテナに入ることができる
CMD [ "for-local.handler" ]
